<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


<context:component-scan base-package="com.aop" />


	<bean id="customerService" class="com.aop.services.CustomerService">
		<property name="name" value="My name is agnesan" />
		<property name="url" value="http://easymedmobile.com/" />
	</bean>
	
	<bean id="viewResolver"  class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <property name="prefix" value="/jsp/"/>                   
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>
	
	<bean id="hijackAroundMethodBean" class="com.aop.HijackAroundMethod"/>	
	<bean id="hijackAfterMethod" class="com.aop.HijackAfterMethod"/>	
	<bean id="hijackBeforeMethod" class="com.aop.HijackBeforeMethod"/>	
	<bean id="hijackThrowException" class="com.aop.HijackThrowException"/>

 
 <!-- Type-I -->
 
<!-- 	<bean id="customerServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean"> -->
<!-- 		<property name="target" ref="customerService" /> -->
<!-- 		<property name="interceptorNames"> -->
<!-- 			<list> -->
<!-- 				<value>hijackAroundMethodBean</value> -->
<!-- 			</list> -->
<!-- 			<list> -->
<!-- 				<value>hijackBeforeMethod</value> -->
<!-- 				<value>hijackAfterMethod</value> -->
<!-- 			</list> -->
<!-- 			<list>				 -->
<!-- 				<value>customerAdvisor</value> -->
<!-- 			</list> -->

<!-- 		</property> -->
<!-- 	</bean> -->
	
	
	<!-- Type-II -->
	
	
	
		<aop:aspectj-autoproxy />
<!-- 	<bean -->
<!-- 		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"> -->
<!-- 		<property name="beanNames"> -->
<!-- 			<list> -->
<!-- 				<value>*Service</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 		<property name="interceptorNames"> -->
<!-- 			<list> -->
<!-- 				<value>customerAdvisor</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
	
	<!-- Type-III -->
	
	
	<bean id="customerPointcut"  class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="printName" />
	</bean>
  
	<bean id="customerAdvisor"  class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="pointcut" ref="customerPointcut" />
		<property name="advice" ref="hijackAroundMethodBean" />
	</bean>
	
	
	
	<!-- Aspect -->


	<bean id="customerBo" class="com.aop.aspectJ.customer.bo.impl.CustomerBoImpl" />	
	<bean id="logAspect" class="com.aop.aspectJ.LoggingAspect" />
	
	
<aop:config>

	<aop:aspect id="aspectLoggging" ref="logAspect">
		<!-- @After -->
		<aop:pointcut id="pointCutAfter"	expression="execution(* com.aop.aspectJ.customer.bo.CustomerBo.addCustomer(..))" />
		<aop:after method="logAfter" pointcut-ref="pointCutAfter" />
	</aop:aspect>

</aop:config>
	
</beans>